MODEL SMALL
.DATA
MSG1 DB '1. MOSTRAR HORA$'
MSG2 DB '2. MOSTRAR FECHA$'
MSG3 DB '3. MOSTRAR MUESTRA$'
MSG4 DB '4. MOSTRAR UTF SELECCIONADO$'
MSG5 DB '5. MODIFICAR FECHA$'
MSG6 DB '6. MODIFICAR HORA$'
MSG7 DB '7. SALIR DEL PROGRAMA$'
MSG8 DB 'SELECCIONE OPCION: $'
MSG9 DB 'DESEA REGRESAR AL MENU [y/n]$'
MSGE DB 'DATO NO RECONOCIDO, REGRESANDO MENU$'
MSG_SEL_UTC DB 'INGRESE FORMATO DE ENTRADA UTC (E.G +05.30, +06, -11)'
MSG_SET_HORAS DB 'INGRESE HORA: $'
MSG_SET_MINUTOS DB 'INGRESE MINUTOS: $'
MSG_SET_SEGUNDOS DB 'INGRESE SEGUNDOS: $'
LUNES DB ' LUNES$'
MARTES DB ' MARTES$'
MIERCOLES DB ' MIERCOLES$'
JUEVES DB ' JUEVES$'
VIERNES DB ' VIERNES$'
SABADO DB ' SABADO$'
DOMINGO DB ' DOMINGO$'
VARDIA DB 11 DUP('$')
UTC0 DB ?
NUMOPCION DB ?
SIGNO DB ?
NUMERO DB ?
PUNTO DB ?
NUMERO_EXTRA DB ?
VAR_HORAS DB ?
VAR_MINUTOS DB ?
VAR_SEGUNDOS DB ?
MSG_SET_EXITO DB 'HORA SETEADA CON SATISFACCION $'
MSG_SET_FRACASO DB 'HORA NO FUE SETEADA CON SATISFACCION $'
VAR_ANIO DB ?
VAR_MES DB ?
VAR_DIA DB ?
VAR_TEMP DB ?
MSG_SET_DIA DB 'INGRESE DIA: $'
MSG_SET_MES DB 'INGRESE MES: $'
MSG_SET_ANIO DB 'INGRESE ANIO (COMPRENDIDO ENTRE 1980-2099): $'
MSG_SET_EXITO_FECHA DB 'FECHA SETEADA CON SATISFACCION $'
MSG_SET_FRACASO_FECHA DB 'FECHA NO FUE SETEADA CON SATISFACCION $'
.CODE
    PROGRAMA:
    MOV AX, @DATA
    MOV DS, AX
    
    MENU:
    CALL CLS
    LEA DX, MSG1
    CALL IMPRIMIR_STRING
    CALL NEWLINE
    LEA DX, MSG2
    CALL IMPRIMIR_STRING
    CALL NEWLINE
    LEA DX, MSG3
    CALL IMPRIMIR_STRING
    CALL NEWLINE
    LEA DX, MSG4
    CALL IMPRIMIR_STRING
    CALL NEWLINE
    LEA DX, MSG5
    CALL IMPRIMIR_STRING
    CALL NEWLINE
    LEA DX, MSG6
    CALL IMPRIMIR_STRING
    CALL NEWLINE
    LEA DX, MSG7
    CALL IMPRIMIR_STRING
    CALL NEWLINE
    LEA DX, MSG8
    CALL IMPRIMIR_STRING
    CALL NEWLINE
    CALL OBTENER_OPCION
    CALL NEWLINE
    JMP SELECCION
    JMP EXIT
    
    REGRESO:
    LEA DX, MSG9
    CALL IMPRIMIR_STRING
    MOV AH, 01H
    INT 21H
    CMP AL, 'y'
    JE MENU
    CMP AL, 'Y'
    JE MENU
    JMP EXIT
    
;**********PROCEDIMIENTOS******************    
    NEWLINE PROC NEAR
    MOV dl, 10
    MOV ah, 02h
    INT 21h
    MOV dl, 13
    MOV ah, 02h
    INT 21h
    RET
    NEWLINE ENDP
    
    IMPRIMIR_STRING PROC NEAR
    MOV AH, 09H
    INT 21H
    RET
    IMPRIMIR_STRING ENDP
    
    OBTENER_OPCION PROC NEAR
    MOV AH, 01H
    INT 21H
    SUB AL, 30H
    MOV NUMOPCION, AL
    RET
    OBTENER_OPCION ENDP
    
    CLS PROC NEAR
    MOV AH, 00H
    MOV AL, 03H
    INT 10H
    RET
    CLS ENDP
    
    IMPRIMIR_2DIGITOS PROC NEAR
     ;; input in AL (0-99).  (Ignores AH because we use AAM instead of div)
    aam           ; like `div` by 10, but with the outputs reversed, and input from AL only
                  ; quotient in AH (high digit), remainder in AL(low digit).  (Opposite to div)

    add   ax, 03030H  ; add '0' to al and ah at the same time.
    mov   dl, al      ; save the low digit
    mov   al, ah      ; print high digit first

    mov   ah, 0EH    ; DOS system call number for printing a single character
    int   10H        ; print first digit.  Doesn't clobber anything, so AH still holds 0x0E after
    mov   al, dl
    int   10H        ; print second digit
    ret
    IMPRIMIR_2DIGITOS ENDP
    
    HORAS PROC NEAR
    MOV AH, 2CH
    INT 21H     ;LLAMA A LA HORA
    MOV AL, CH  ;MUEVE LA HORA A AL
    CALL IMPRIMIR_2DIGITOS
    MOV DL, ':'
    MOV AH, 02H
    INT 21H
    RET
    HORAS ENDP
    
    MINUTOS PROC NEAR
    MOV AH, 2CH
    INT 21H     ;LLAMA A LA HORA
    MOV AL, CL  ;MUEVE LOS MINUTOS A AL
    CALL IMPRIMIR_2DIGITOS
    MOV DL, ':'
    MOV AH, 02H
    INT 21H
    RET
    MINUTOS ENDP
    
    INTERMEDIO_REGRESO3:
    JMP REGRESO
    
    SEGUNDOS PROC NEAR
    MOV AH, 2CH
    INT 21H     ;LLAMA A LA HORA
    MOV AL, DH  ;MUEVE LA HORA A AL
    CALL IMPRIMIR_2DIGITOS
    RET
    SEGUNDOS ENDP
    
    DIA PROC NEAR
    MOV AH, 2AH
    INT 21H
    MOV AL, DL
    CALL IMPRIMIR_2DIGITOS
    MOV DL, '/'
    MOV AH, 02H
    INT 21H
    RET
    DIA ENDP
    
    MES PROC NEAR
    MOV AH, 2AH
    INT 21H
    MOV AL, DH
    CALL IMPRIMIR_2DIGITOS
    MOV DL, '/'
    MOV AH, 02H
    INT 21H
    RET
    MES ENDP
    
    ANIO PROC NEAR
    MOV AH, 2AH
    INT 21H
    ADD CX, 0F830H
    MOV AX, CX
    AAM
    ADD AH, 30H
    ADD AL, 30H
    MOV BL, AL
    MOV DL, AH
    MOV AH, 02H
    INT 21H
    MOV DL, BL
    MOV AH, 02H
    INT 21H
    RET
    ANIO ENDP
    
    ;LA INTERRUPCION DE OBTENER TIEMPO SE LLAMA DE ULTIMO CON LOS DATOS SETEADOS EN SU LUGAR
    ;RETORNA EN AL = 00H SI FUE EXITOSA, FFH SI FUE FRACASO
    
    SET_HORAS PROC NEAR
    CALL CLS
    LEA DX, MSG_SET_HORAS
    CALL IMPRIMIR_STRING
    MOV AH, 01H
    INT 21H
    SUB AL, 30H
    MOV BL, 0AH
    MUL BL
    MOV VAR_HORAS, AL
    MOV AH, 01H
    INT 21H
    SUB AL, 30H
    ADD VAR_HORAS, AL
    CALL NEWLINE
    RET             ;EN ESTE RETORNO, YA HORAS TIENE EL DATO SETEADO
    SET_HORAS ENDP
    
    SET_MINUTOS PROC NEAR
    LEA DX, MSG_SET_MINUTOS
    CALL IMPRIMIR_STRING
    MOV AH, 01H
    INT 21H
    SUB AL, 30H
    MOV BL, 0AH
    MUL BL
    MOV VAR_MINUTOS, AL
    MOV AH, 01H
    INT 21H
    SUB AL, 30H
    ADD VAR_MINUTOS, AL
    CALL NEWLINE
    RET
    SET_MINUTOS ENDP
    
    SET_SEGUNDOS PROC NEAR
    LEA DX, MSG_SET_SEGUNDOS
    CALL IMPRIMIR_STRING
    MOV AH, 01H
    INT 21H
    SUB AL, 30H
    MOV BL, 0AH
    MUL BL
    MOV VAR_SEGUNDOS, AL
    MOV AH, 01H
    INT 21H
    SUB AL, 30H
    ADD VAR_SEGUNDOS, AL
    CALL NEWLINE 
    RET
    SET_SEGUNDOS ENDP
    
    SET_TIEMPO PROC NEAR
    XOR CX, CX
    XOR DX, DX
    XOR AX, AX
    MOV CH, VAR_HORAS
    MOV CL, VAR_MINUTOS
    MOV DL, 0Ah       ;SE SETEA LOS MILISEGUNDOS A 0
    MOV DH, VAR_SEGUNDOS
    MOV AH, 2DH
    INT 21H
    RET
    SET_TIEMPO ENDP
    
    SET_DIA PROC NEAR
    LEA DX, MSG_SET_DIA
    CALL IMPRIMIR_STRING
    MOV AH, 01H
    INT 21H
    SUB AL, 30H
    MOV BL, 0AH
    MUL BL
    MOV VAR_DIA, AL
    MOV AH, 01H
    INT 21H
    SUB AL, 30H
    ADD VAR_DIA, AL
    CALL NEWLINE
    RET
    SET_DIA ENDP
    
    SET_MES PROC NEAR
    LEA DX, MSG_SET_MES
    CALL IMPRIMIR_STRING
    MOV AH, 01H
    INT 21H
    SUB AL, 30H
    MOV BL, 0AH
    MUL BL
    MOV VAR_MES, AL
    MOV AH, 01H
    INT 21H
    SUB AL, 30H
    ADD VAR_MES, AL
    CALL NEWLINE
    RET
    SET_MES ENDP
    
    SET_ANIO PROC NEAR
    LEA DX, MSG_SET_ANIO
    CALL IMPRIMIR_STRING
    MOV AH, 01H
    INT 21H
    SUB AL, 30H
    MOV BX, 03E8H  ;1000 EN HEX
    MUL BX
    MOV VAR_ANIO, DH
    ADD VAR_ANIO, DL
    ADD VAR_ANIO, AH
    ADD VAR_ANIO, AL
    MOV AH, 01H
    INT 21H
    SUB AL, 30H
    MOV BX, 64H ;100 EN HEX
    MUL BX
    ADD VAR_ANIO, DH
    ADD VAR_ANIO, DL
    ADD VAR_ANIO, AH
    ADD VAR_ANIO, AL
    MOV AH, 01H
    INT 21H
    SUB AL, 30H
    MOV BL, 0AH ;10 EN HEX
    MUL BL
    ADD VAR_ANIO, AL
    MOV AH, 01H
    INT 21H
    SUB AL, 30H
    ADD VAR_ANIO, AL    ;UNIDAD
    RET
    SET_ANIO ENDP
    
    SET_FECHA PROC NEAR
    CALL CLS
    CALL SET_DIA
    CALL SET_MES
    CALL SET_ANIO
    MOV CL, VAR_ANIO
    MOV DH, VAR_MES
    MOV DL, VAR_DIA
    MOV AH, 2BH
    INT 21H
    RET
    SET_FECHA ENDP
    
    INTERMEDIO_MENU:
    JMP MENU
    
    OBTENER_UTC0 PROC NEAR
    MOV AH, 2CH
    INT 21H
    MOV AL, CH  ;OBTENEMOS LAS HORAS
    ADD AL, 06H
    MOV UTC0, AL
    RET
    OBTENER_UTC0 ENDP
    
    SEL_UTC PROC NEAR
    LEA DX, MSG_SEL_UTC
    CALL IMPRIMIR_STRING
    MOV AH, 01H
    INT 21H     ;ESTE ES EL SIGNO
    MOV SIGNO, AL
    MOV AH,01H
    INT 21H     ;ESTE ES EL NUMERO DEL UTC
    SUB AL, 30H
    MOV BL, 0AH
    MUL BL
    MOV NUMERO, AL
    MOV AH, 10H
    INT 21H
    ADD NUMERO, AL
    MOV AH, 01H
    INT 21H     ;OBTIENE EL VALOR DEL PUNTO, PUEDE SER ENTER O PUNTO, VALIDAR SI SE PRESIONA 'ENTER'
    MOV PUNTO, AL  
    MOV AH, 01H
    INT 21H     
    MOV NUMERO_EXTRA, AL
    CALL MOSTRAR_UTC
    RET
    SEL_UTC ENDP
    
    MODIFICAR_UTC PROC NEAR
    RET
    MODIFICAR_UTC ENDP
    
;***********ETIQUETAS***********************
    
    SELECCION:
    CMP NUMOPCION, 1
    JE INTERMEDIO_MOSTRAR_HORA
    CMP NUMOPCION, 2
    JE INTERMEDIO_MOSTRAR_FECHA
    CMP NUMOPCION, 3
    JE INTERMEDIO_MOSTRAR_MUESTRA
    CMP NUMOPCION, 4
    JE INTERMEDIO_MOSTRAR_UTC
    CMP NUMOPCION, 5 
    JE  INTERMEDIO_MOD_FECHA
    CMP NUMOPCION, 6
    JE INTERMEDIO_MOD_HORA
    CMP NUMOPCION, 7
    JE INTERMEDIO_EXIT
    JMP DATO_ERROR
    
    RESET23:
    MOV CL, NUMERO
    ADD UTC0, 1
    INC CL
    CMP UTC0, 24
    JE RESET_00
    CMP CL, 0
    JNE RESET23
    CALL IMPRIMIR_2DIGITOS
    CALL MINUTOS
    CALL SEGUNDOS
    CALL NEWLINE 
    JMP REGRESO
    
    RESET_00:
    MOV UTC0, 00
    MOV AL, VARDIA
    CMP AL, 0
    JE REGRESAR_SABADO  ;REGRESAMOS UN DIA EN EL RELOJ
    DEC AL
    MOV VARDIA, AL
    JMP RESET23
;**************SALTOS INTERMEDIOS********************    
    INTERMEDIO_REGRESO2:
    JMP INTERMEDIO_REGRESO3
    
    INTERMEDIO_MOSTRAR_HORA:
    JMP INTERMEDIO_MOSTRAR_HORA2
    
    INTERMEDIO_MOSTRAR_FECHA:
    JMP INTERMEDIO_MOSTRAR_FECHA2
    
    INTERMEDIO_MOSTRAR_MUESTRA:
    JMP INTERMEDIO_MOSTRAR_MUESTRA2
    
    INTERMEDIO_MOSTRAR_UTC:
    JMP INTERMEDIO_MOSTRAR_UTC2
    
    INTERMEDIO_MOD_FECHA:
    JMP INTERMEDIO_MOD_FECHA2
    
    INTERMEDIO_MOD_HORA:
    JMP INTERMEDIO_MOD_HORA2
    
    INTERMEDIO_EXIT:
    JMP INTERMEDIO_EXIT2
    
    REGRESAR_SABADO:
    MOV VARDIA, 06
    JMP RESET23
    
    DIA_SEMANA:
    MOV AH, 2AH
    INT 21H
    CMP AL, 0
    JE SET_DOMINGO
    CMP AL, 1
    JE SET_LUNES
    CMP AL, 2
    JE SET_MARTES
    CMP AL, 3
    JE SET_MIERCOLES
    CMP AL, 4
    JE SET_JUEVES
    CMP AL, 5
    JE INTERMEDIO_SET_VIERNES
    CMP AL, 6
    JE INTERMEDIO_SET_SABADO
    JMP INTERMEDIO_EXIT

;************************ SALTOS INTERMEDIOS*******************    
    INTERMEDIO_MOD_FECHA2:
    JMP INTERMEDIO_MOD_FECHA3
    
    INTERMEDIO_MOSTRAR_HORA2:
    JMP INTERMEDIO_MOSTRAR_HORA3
    
    INTERMEDIO_REGRESO:
    JMP INTERMEDIO_REGRESO2
    
    INTERMEDIO_MOSTRAR_FECHA2:
    JMP INTERMEDIO_MOSTRAR_FECHA3
    
    INTERMEDIO_MOSTRAR_MUESTRA2:
    JMP INTERMEDIO_MOSTRAR_MUESTRA3
    
    INTERMEDIO_MOSTRAR_UTC2:
    JMP INTERMEDIO_MOSTRAR_UTC3
    
    INTERMEDIO_MOD_HORA2:
    JMP INTERMEDIO_MOD_HORA3
    
    INTERMEDIO_EXIT2:
    JMP INTERMEDIO_EXIT3
    
    INTERMEDIO_RESET23_4:
    JMP RESET23
    
    INTERMEDIO_SET_SABADO:
    JMP SET_SABADO
    
    INTERMEDIO_SET_VIERNES:
    JMP SET_VIERNES
    
    ;********************SETTERS DE DIAS**********************************   
    
    SET_DOMINGO:
    MOV DL, DOMINGO
    MOV VARDIA, DL
    LEA DX, DOMINGO
    MOV AH, 09H
    INT 21H
    CALL NEWLINE
    JMP INTERMEDIO_REGRESO
    
    SET_LUNES:
    MOV DL, LUNES
    MOV VARDIA, DL
    LEA DX, LUNES
    MOV AH, 09H
    INT 21H
    CALL NEWLINE
    JMP INTERMEDIO_REGRESO
    
    SET_MARTES:
    MOV DL, MARTES
    MOV VARDIA, DL
    LEA DX, MARTES
    MOV AH, 09H
    INT 21H
    CALL NEWLINE
    JMP INTERMEDIO_REGRESO
    
    SET_MIERCOLES:
    MOV DL, MIERCOLES
    MOV VARDIA, DL
    MOV AH, 09H
    INT 21H
    CALL NEWLINE
    JMP INTERMEDIO_REGRESO
    
    SET_JUEVES:
    MOV DL, JUEVES
    MOV VARDIA, DL
    LEA DX, JUEVES
    MOV AH, 09H
    INT 21H
    CALL NEWLINE
    JMP INTERMEDIO_REGRESO
    
    SET_VIERNES:
    MOV DL, VIERNES
    MOV VARDIA, DL
    LEA DX, VIERNES
    MOV AH, 09H
    INT 21H
    CALL NEWLINE
    JMP INTERMEDIO_REGRESO
    
    SET_SABADO:
    MOV DL, SABADO
    MOV VARDIA, DL
    LEA DX, SABADO
    MOV AH, 09H
    INT 21H
    CALL NEWLINE
    JMP INTERMEDIO_REGRESO
;************************ SALTOS INTERMEDIOS*****************
   
    INTERMEDIO_RESET23_3:
    JMP INTERMEDIO_RESET23_4
    
    INTERMEDIO_MOSTRAR_FECHA3:
    JMP MOSTRAR_FECHA
    
    INTERMEDIO_MOSTRAR_MUESTRA3:
    JMP MOSTRAR_MUESTRA
    
    INTERMEDIO_MOSTRAR_UTC3:
    JMP MOSTRAR_UTC
    
    INTERMEDIO_MOD_FECHA3:
    JMP MOD_FECHA
    
    INTERMEDIO_MOD_HORA3:
    JMP MOD_HORA
    
    INTERMEDIO_EXIT3:
    JMP EXIT
    
    MOSTRAR_FECHA:
    CALL DIA
    CALL MES
    CALL ANIO
    JMP DIA_SEMANA
    
    INTERMEDIO_MOSTRAR_HORA3:
    JMP MOSTRAR_HORA
    
    INTERMEDIO_RESET23_2:
    JMP INTERMEDIO_RESET23_3
    
    DATO_ERROR:
    LEA DX, MSGE
    CALL IMPRIMIR_STRING
    CALL CLS
    JMP MENU
    
    MOSTRAR_HORA:
    CALL HORAS
    CALL MINUTOS
    CALL SEGUNDOS
    CALL NEWLINE
    JMP INTERMEDIO_REGRESO
    
    MOSTRAR_MUESTRA:
    
    MOD_FECHA:
    CALL SET_FECHA
    CMP AL, 00
    JE SET_EXITO_FECHA
    JMP SET_FAIL_FECHA
    
    SET_EXITO_FECHA:
    LEA DX, MSG_SET_EXITO_FECHA
    CALL IMPRIMIR_STRING
    CALL NEWLINE
    JMP MOSTRAR_FECHA
    
    SET_FAIL_FECHA:
    LEA DX, MSG_SET_FRACASO_FECHA
    CALL IMPRIMIR_STRING
    CALL NEWLINE
    JMP INTERMEDIO_REGRESO
    
    INTERMEDIO_RESET23:
    JMP INTERMEDIO_RESET23_2
    
    MOD_HORA:
    CALL SET_HORAS
    CALL SET_MINUTOS
    CALL SET_SEGUNDOS
    CALL SET_TIEMPO
    CMP AL, 00H
    JE SET_EXITO
    JMP SET_FRACASO
    
    SET_EXITO:
    LEA DX, MSG_SET_EXITO
    MOV AH, 09H
    INT 21H
    CALL NEWLINE
    CALL MOSTRAR_HORA
    
    SET_FRACASO:
    LEA DX, MSG_SET_FRACASO
    MOV AH, 09H
    INT 21H
    CALL NEWLINE
    JMP INTERMEDIO_REGRESO
    
    MOSTRAR_UTC:
    CMP PUNTO, 0DH
    JE UTC_NORMAL
    
    UTC_NORMAL:
    CMP SIGNO, '+'
    JE UTC_NORMAL_POSITIVO
    CMP SIGNO, '+'
    JE UTC_NORMAL_NEGATIVO
    
    UTC_NORMAL_POSITIVO:
    CALL OBTENER_UTC0   ;SE LLAMA A LA HORA ESTANDAR
    ADD AL, NUMERO
    MOV UTC0, AL
    CMP UTC0, 23
    JA INTERMEDIO_RESET23
    MOV AL, UTC0
    CALL IMPRIMIR_2DIGITOS
    CALL MINUTOS
    CALL SEGUNDOS
    CALL NEWLINE
    JMP REGRESO
    
    UTC_NORMAL_NEGATIVO:
    ;NO TIENE NADA TODAVIA
   
    EXIT:
    MOV AH, 4CH
    INT 21H
    
    END PROGRAMA
.STACK