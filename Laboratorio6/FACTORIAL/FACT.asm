MODEL SMALL
.STACK
.DATA
RESULTADO DB 238 DUP('$')
MULTIPLICANDO DB 3 DUP('$')
;LOS RESIDUOS SE TIENEN QUE SUMAR
RESIDUO1 DB 4 DUP('$')
RESIDUO2 DB 5 DUP('$')
RESIDUO3 DB 6 DUP('$')
ACARREO_ANT DB ?
INGRESO DB 'INGRESE EL FACTORIAL: $'
.CODE
    PROGRAM:
    MOV AX, @DATA
    MOV DS, AX
    
    ;SE INICIALIZA LOS INDICES CON LOS DATOS EFECTIVOS DE LAS VARIABLES EN DS
    LEA SI, RESULTADO
    LEA DI, MULTIPLICANDO
    
    ;DESPLEGAMOS EL MENSAJE INICIAL
    MOV DX,OFFSET INGRESO
    MOV AH,09H
    INT 21H
    ;LIMPIAMOS PARA USAR BX COMO CONTADOR
    XOR BL,BL
    
    ;OBTENEMOS LOS DATOS Y LOS AGREGAMOS A MULTIPLICANDO
    LOOP_DATOS:
    MOV AH,01H
    INT 21H
    SUB AL,30H
    MOV [DI],AL
    MOV BH, [DI]
    MOV RESULTADO[SI],BH
    INC DI
    INC SI
    INC BL
    CMP BL,3
    JNZ LOOP_DATOS
    
    ;DECREMENTAMOS EN 1 EL NUMERO INGRESADO
    DECREMENTAR:
    MOV AL, [DI]
    ; ES CERO EL VALOR MAS A LA IZQUIERDA?
    CMP AL, 0
    ;SI, SALTE A SUBSTRAER [DI-1]
    JZ SUBS_DER
    ;NO, SUBSTRAIGA SOLO 1
    SUB AL, 1
    MOV [DI], AL
    JMP MULTIPLICAR
    
    MULTIPLICAR:
    XOR AX,AX
    XOR BX,BX
    XOR DX,DX
    ;GUARDAMOS LA POSICION DE DI
    MOV BH, DI
    LEA DI, MULTIPLICANDO
    SUB BH, DI
    ;RETORNAMOS A SI SU POSICION ORIGINAL
    MOV SI, BL
    CMP BH, 2
    JE MULT_R1
    CMP BH, 1
    JE MULT_R2
    CMP BH, 0
    JE MULT_R3
    
    MULT_R1:
    MOV DL, [DI]
    MOV AL, [SI]
    MUL DL  ;RESULTADO ALMACENADO EN AX, AH: ACARREO, AL: UNIDADES
    PUSH SI ;PUSHEAMOS LA DIRECCION AL STACK
    ;CARGA RESIDUO 1 AL APUNTADOR SI
    LEA SI, RESIDUO1
    CORRER:
    CMP RESIDUO1[SI], 24H   ;ESTA VACIO?
    INC SI
    JNE CORRER
    MOV AL, [SI]
    POP SI ;HACEMOS POP AL DATO ORIGINAL
    PUSH AH ;GUARDAMOS EL ACARREO
    PUSH SI
    LEA SI, RESULTADO
    MOV BL, SI
    POP SI
    MOV BH, SI
    CMP BH, BL
    JZ DECREMENTAR
    DEC DI
    JMP MULTPLICAR
    
    
    MULT_R2:
    MOV DL, [DI]
    MOV AL, [SI]
    MUL DL  ;RESULTADO ALMACENADO EN AX, AH: ACARREO, AL: UNIDADES
    PUSH SI ;PUSHEAMOS LA DIRECCION AL STACK
    ;CARGA RESIDUO 1 AL APUNTADOR SI
    LEA SI, RESIDUO1
    MOV [SI], '0'
    SUB [SI], 30H
    
    MULT_R3:
    
    SUBS_DER:
    MOV [DI], '9'
    SUB [DI], 30H
    DEC DI
    ;MUEVA A AL LO QUE TIENE DI-1, QUE SERIA EL DATO ANTERIOR
    MOV AL, [DI]
    SUB AL, 01H
    MOV [DI], AL
    INC DI
    JMP MULTIPLICAR
    
    MOVER_MULTIPLICANDO:
    XOR BX, BX
    PUSH DI
    LEA DI, MULTPLICANDO
    MOV BH, DI
    POP DI
    MOV BL, DI
    CMP BL, BH
    JZ SIG_NUMERO
    DEC DI
    JMP MULTIPLICAR
    
    
    EXIT:
    MOV AH, 4CH
    INT 21H
    END PROGRAM